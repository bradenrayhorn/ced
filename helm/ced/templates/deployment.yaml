{{- $cedImage := "ghcr.io/bradenrayhorn/ced" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ced.fullname" . }}-server
  labels:
    {{- include "ced.labelsServer" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ced.selectorLabelsServer" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ced.selectorLabelsServer" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "ced.serviceAccountName" . }}
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: {{ include "ced.fullname" . }}-data
        - name: {{ include "ced.fullname" . }}-litestream-config
          configMap:
            name: {{ include "ced.fullname" . }}-litestream-config
      {{- if .Values.litestream.enabled }}
      initContainers:
        - name: init-litestream
          image: litestream/litestream:{{ .Values.litestream.version }}
          args: ['restore', '-if-db-not-exists', '-if-replica-exists', '-v', '/app-data/ced.db']
          volumeMounts:
            - name: app-data
              mountPath: /app-data/
            - name: {{ include "ced.fullname" . }}-litestream-config
              mountPath: /etc/litestream.yml
              subPath: litestream.yml
          env:
            - name: LITESTREAM_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.litestream.secret }}
                  key: LITESTREAM_ACCESS_KEY_ID
            - name: LITESTREAM_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.litestream.secret }}
                  key: LITESTREAM_SECRET_ACCESS_KEY
      {{- end }}
      containers:
        - name: ced-server
          image: "{{ $cedImage }}-server:{{ .Values.image.cedVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_PATH
              value: "/app-data/ced.db"
            {{- if .Values.ced.trusted.cloudflare.enabled }}
            - name: CLOUDFLARE_TRUSTED_IP
              value: {{ .Values.ced.trusted.cloudflare.trustedConnectingIP }}
            {{- end}}
          volumeMounts:
            - name: app-data
              mountPath: /app-data/
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/live
              port: 8080
          readinessProbe:
            httpGet:
              path: /api/v1/live
              port: 8080
          resources:
            {{- toYaml .Values.resources.server | nindent 12 }}
      {{- if .Values.litestream.enabled }}
        - name: litestream
          image: litestream/litestream:{{ .Values.litestream.version }}
          args: ['replicate']
          volumeMounts:
            - name: app-data
              mountPath: /app-data/
            - name: {{ include "ced.fullname" . }}-litestream-config
              mountPath: /etc/litestream.yml
              subPath: litestream.yml
          env:
            - name: LITESTREAM_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.litestream.secret }}
                  key: LITESTREAM_ACCESS_KEY_ID
            - name: LITESTREAM_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.litestream.secret }}
                  key: LITESTREAM_SECRET_ACCESS_KEY
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ced.fullname" . }}-ui
  labels:
    {{- include "ced.labelsUI" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ced.selectorLabelsUI" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ced.selectorLabelsUI" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "ced.serviceAccountName" . }}
      containers:
        - name: ced-ui
          image: "{{ $cedImage }}-ui:{{ .Values.image.cedVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUBLIC_EVENT_TITLE
              value: {{ .Values.event.title }}
            - name: PUBLIC_EVENT_URL
              value: {{ .Values.event.url }}
            - name: PUBLIC_BASE_API_URL
              value: ""
            {{- if .Values.ced.trusted.cloudflare.enabled }}
            - name: ENABLE_CLOUDFLARE_FORWARDING
              value: "true"
            {{- end}}
            {{- if .Values.event.theme }}
            - name: PUBLIC_THEME
              value: {{ .Values.event.theme }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          resources:
            {{- toYaml .Values.resources.ui | nindent 12 }}
